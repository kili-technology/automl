from kiliautoml.models import HuggingFaceNamedEntityRecognitionModel

TEST_CASES = [
    {
        "text": (
            "Mongolia 's state copyright official , Gundegma Jargalshaihan , said apologetically"
            " that he had just arrived from Ulan Bator and was not aware of the details of the"
            " digital agenda ."
        ),
        "predicted_label": [
            "O",
            "B-MISCELLANEOUS",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "B-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "B-LOCATION",
            "B-LOCATION",
            "B-LOCATION",
            "B-LOCATION",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
        ],
        "predicted_proba": [
            0.9891428,
            0.21936713,
            0.71871537,
            0.9725352,
            0.98464686,
            0.9749568,
            0.9834982,
            0.98500293,
            0.3069953,
            0.32772937,
            0.27139324,
            0.43520725,
            0.32859072,
            0.29901296,
            0.318875,
            0.9909329,
            0.99281293,
            0.9924598,
            0.9903125,
            0.99133974,
            0.99221885,
            0.99379325,
            0.9925785,
            0.99435216,
            0.99431664,
            0.9941814,
            0.99085814,
            0.22385,
            0.22398539,
            0.2329555,
            0.24198674,
            0.99349403,
            0.9937805,
            0.9930056,
            0.9934446,
            0.9938502,
            0.9941022,
            0.99379593,
            0.9940132,
            0.99407583,
            0.99106485,
            0.9916821,
            0.9937121,
            0.9908303,
        ],
        "tokens": [
            "[CLS]",
            "Mongolia",
            "'",
            "s",
            "state",
            "copyright",
            "official",
            ",",
            "Gun",
            "##deg",
            "##ma",
            "Jar",
            "##gal",
            "##sha",
            "##ihan",
            ",",
            "said",
            "apo",
            "##loge",
            "##tical",
            "##ly",
            "that",
            "he",
            "had",
            "just",
            "arrived",
            "from",
            "U",
            "##lan",
            "Bat",
            "##or",
            "and",
            "was",
            "not",
            "aware",
            "of",
            "the",
            "details",
            "of",
            "the",
            "digital",
            "agenda",
            ".",
            "[SEP]",
        ],
        "null_category": "O",
        "offset_in_text": 0,
        "output": [
            {
                "beginOffset": 0,
                "content": "Mongolia",
                "endOffset": 8,
                "categories": [{"name": "MISCELLANEOUS", "confidence": 21}],
            },
            {
                "beginOffset": 39,
                "content": "Gundegma Jargalshaihan",
                "endOffset": 61,
                "categories": [{"name": "PERSON", "confidence": 30}],
            },
            {
                "beginOffset": 114,
                "content": "Ulan Bator",
                "endOffset": 124,
                "categories": [{"name": "LOCATION", "confidence": 22}],
            },
        ],
    },
    {
        "text": (
            "Liberian striker George Weah makes a welcome return for Milan alongside Roberto Baggio"
            " , with Montenegrin Dejan Savicevic in midfield ."
        ),
        "predicted_label": [
            "O",
            "B-LOCATION",
            "O",
            "O",
            "B-PERSON",
            "I-PERSON",
            "I-PERSON",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "B-ORGANIZATION",
            "O",
            "B-PERSON",
            "I-PERSON",
            "I-PERSON",
            "O",
            "O",
            "B-MISCELLANEOUS",
            "B-ORGANIZATION",
            "I-ORGANIZATION",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "I-PERSON",
            "O",
            "O",
            "O",
            "O",
            "O",
        ],
        "predicted_proba": [
            0.9630293,
            0.20458907,
            0.6212415,
            0.91057795,
            0.35268387,
            0.30032328,
            0.30388993,
            0.9914012,
            0.992194,
            0.9885365,
            0.99015784,
            0.9897717,
            0.9850305,
            0.284187,
            0.98878074,
            0.39271936,
            0.32857597,
            0.37560627,
            0.9911426,
            0.99035496,
            0.16133615,
            0.21083432,
            0.20185071,
            0.26653793,
            0.33313847,
            0.40552405,
            0.3029949,
            0.29568827,
            0.9908742,
            0.9886819,
            0.98725134,
            0.991078,
            0.9874685,
        ],
        "tokens": [
            "[CLS]",
            "Liberia",
            "##n",
            "striker",
            "George",
            "We",
            "##ah",
            "makes",
            "a",
            "wel",
            "##come",
            "return",
            "for",
            "Milan",
            "alongside",
            "Roberto",
            "Ba",
            "##ggio",
            ",",
            "with",
            "Monte",
            "##neg",
            "##rin",
            "De",
            "##jan",
            "Sa",
            "##vice",
            "##vic",
            "in",
            "mid",
            "##field",
            ".",
            "[SEP]",
        ],
        "null_category": "O",
        "offset_in_text": 0,
        "output": [
            {
                "beginOffset": 0,
                "content": "Liberia",
                "endOffset": 7,
                "categories": [{"name": "LOCATION", "confidence": 20}],
            },
            {
                "beginOffset": 17,
                "content": "George Weah",
                "endOffset": 28,
                "categories": [{"name": "PERSON", "confidence": 35}],
            },
            {
                "beginOffset": 56,
                "content": "Milan",
                "endOffset": 61,
                "categories": [{"name": "ORGANIZATION", "confidence": 28}],
            },
            {
                "beginOffset": 72,
                "content": "Roberto Baggio",
                "endOffset": 86,
                "categories": [{"name": "PERSON", "confidence": 39}],
            },
            {
                "beginOffset": 94,
                "content": "Monte",
                "endOffset": 99,
                "categories": [{"name": "MISCELLANEOUS", "confidence": 16}],
            },
            {
                "beginOffset": 99,
                "content": "negrin",
                "endOffset": 105,
                "categories": [{"name": "ORGANIZATION", "confidence": 21}],
            },
            {
                "beginOffset": 106,
                "content": "Dejan Savicevic",
                "endOffset": 121,
                "categories": [{"name": "PERSON", "confidence": 26}],
            },
        ],
    },
]


class TestHuggingFaceNamedEntityRecognitionModel:
    def test_predicted_tokens_to_kili_annotations(self):

        for test_case in TEST_CASES:

            kili_annotations = (
                HuggingFaceNamedEntityRecognitionModel._predicted_tokens_to_kili_annotations(
                    test_case["text"],
                    test_case["predicted_label"],
                    test_case["predicted_proba"],
                    test_case["tokens"],
                    test_case["null_category"],
                    test_case["offset_in_text"],
                )
            )

            assert kili_annotations == test_case["output"]
